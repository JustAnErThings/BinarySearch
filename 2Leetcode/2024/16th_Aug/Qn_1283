//QuestionLink :: https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold/description/

//JavaCode::

class Solution {
    public int smallestDivisor(int[] nums, int threshold) {
      int max = findMax(nums);
      int low = 1;
      int high = max;
      while(low<=high){
        int mid = (low+high)/2;

        if(sumOfDiv(nums,mid)<=threshold){
          high = mid-1;
        }else{
          low = mid+1;
        }
      }
      return low;
    }
    public int sumOfDiv(int[] arr, int mid){
     int sum = 0;
        for (int i = 0; i < arr.length; i++) {
            sum += Math.ceil((double)(arr[i]) / (double)(mid));
        }
        return sum;
    }
    public int findMax(int[] arr){
      int max = arr[0];
      for(int val:arr){
        if(val>max){
          max = val;
        }
      }
      return max;
    }
}
