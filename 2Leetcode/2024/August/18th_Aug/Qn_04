//QuestionLink:: https://leetcode.com/problems/median-of-two-sorted-arrays/

//JavaCode::
1.Brute
class Solution {
    public double findMedianSortedArrays(int[] arr1, int[] arr2) {
        int m = arr1.length;
        int n = arr2.length;
        int[] arr = new int[m+n];
        int k  = 0;

       for (int i = 0; i < m; i++) {
           arr[k] = arr1[i];
           k++;
       }
       for (int i = 0; i < n; i++) {
           arr[k] = arr2[i];
           k++;
       }
       Arrays.sort(arr);
       int l = arr.length;

       if (l % 2 != 0){
           return  (double) arr[l/2];
       }else{
           int mid1 = arr[l/2 -1];
           int mid2 = arr[l/2];
           return ((double)mid1+ (double) mid2) / 2.0;
       }
    }
}

//2. Better
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int m = nums1.length;
        int n = nums2.length;
        int[] nums = new int[m+n];
        int k=0, i=0, j=0;
            while(i<m && j<n){
                if(nums1[i]<=nums2[j]){
                    nums[k++] = nums1[i++];
                }else{
                    nums[k++] = nums2[j++];
                }
            }
            while(i<m){
                nums[k++] = nums1[i++];
            }
            while(j<n){
                nums[k++] = nums2[j++];
            }
         int l = nums.length;

       if (l % 2 != 0){
           return  (double) nums[l/2];
       }else{
           int mid1 = nums[l/2 -1];
           int mid2 = nums[l/2];
           return ((double)mid1+ (double) mid2) / 2.0;
       }
    }
}
