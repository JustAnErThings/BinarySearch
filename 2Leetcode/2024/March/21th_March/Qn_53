//QuestionLink: https://leetcode.com/problems/maximum-subarray/description/

//JavaCode:

class Solution {
    public int maxSubArray(int[] nums) {
       int n = nums.length;

        int max = Integer.MIN_VALUE;
        int sum = 0;
        for(int i=0; i<n; i++){
            sum = sum + nums[i];
          
          if(sum > max){
            max =  sum;
          }
          if(sum<0){
            sum = 0;
          }
        }
        return max;

    }
}

//BRUTE FORCE METHOD
//  int n = nums.length;
//         int max = Integer.MIN_VALUE;

//         for(int i=0; i<n; i++){
//           for(int j=i; j<n; j++){
//             int sum = 0;
//             for(int k=i; k<=j; k++){
//               sum = sum + nums[k];
//             }
           
//               max = Math.max(sum, max);
//           }
//         }
//         return max;
