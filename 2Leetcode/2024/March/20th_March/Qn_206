//QuestionLink: https://leetcode.com/problems/reverse-linked-list/description/

//JavaCode

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null || head.next == null) return head;
//RECURSIVE METHOD:

        ListNode newHead = reverseList(head.next);

        ListNode front = head.next;
        front.next = head;
        head.next = null;
        
        return newHead;
     

//ITERATIVE METHOD:
        // ListNode prev = null;
        // ListNode temp = head;
        // ListNode front;

        // while(temp != null){
        //     front = temp.next;
        //     temp.next = prev;
        //     prev = temp;
        //     temp = front;
        // }
        // return prev;
    }
}
