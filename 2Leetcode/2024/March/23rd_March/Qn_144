//QustionLink: https://leetcode.com/problems/reorder-list/description/

//Java Code
class Solution {
    public void reorderList(ListNode head) {
        if(head.next == null) return;

        ListNode slow = head;
        ListNode fast = head;
        while(fast != null && fast.next != null){
          slow = slow.next;
          fast = fast.next.next;
        }
        
        ListNode newHead = reverse(slow.next);
        slow.next = null;

        ListNode orderedHead = reorder(head, newHead);

        return;
    }

  public ListNode reorder(ListNode head1, ListNode head2){
      ListNode orgHead = head1;
      while(head1 != null && head2 != null){
          ListNode temp1 = head1.next;
          ListNode temp2 = head2.next;

          head1.next = head2;
          head2.next = temp1;
          head1 = temp1;
          head2 = temp2;
      }
      return orgHead;
  }


  public  ListNode reverse(ListNode head){
      if(head == null || head.next == null) return head;
      ListNode newHead = reverse(head.next);

        ListNode front = head.next;
        front.next = head;
        head.next = null;
        
        return newHead;
    }
}
