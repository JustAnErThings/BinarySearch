//QuestionLink:  https://leetcode.com/problems/count-subarrays-where-max-element-appears-at-least-k-times/description/

//java code

class Solution {
    public long countSubarrays(int[] nums, int k) {
        int max = Arrays.stream(nums).max().getAsInt();
        long ans = 0;
        int n = nums.length;

        List<Integer> maxIdx = new ArrayList<>();
        maxIdx.add(-1); 
        for (int i = 0; i < n; i++) {
            if (nums[i] == max) {
                maxIdx.add(i);
            }
        }

        int indsize = maxIdx.size();

        for (int i = 1; i <= indsize - k; i++) {
            long l = maxIdx.get(i) - maxIdx.get(i - 1) - 1;
            long r = n - 1 - maxIdx.get(i + k - 1);
            ans += (l + 1) * (r + 1);
        }

        return ans;
    }
}
