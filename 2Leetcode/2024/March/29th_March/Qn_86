//QuestionLink:  https://leetcode.com/problems/partition-list/description/

//Java code

class Solution {
    public ListNode partition(ListNode head, int x) {
        ListNode nodeLess = new ListNode(0); //Dummy node for less value than x
        ListNode lessTemp = nodeLess; //to traverse through nodeLess

        ListNode nodeGrt = new ListNode(0); //Dummy node for greater value than x
        ListNode grtTemp = nodeGrt;

        ListNode temp = head;

        while(temp != null){
          if(temp.val < x){
            lessTemp.next = new ListNode(temp.val);
            lessTemp = lessTemp.next;
          }else{
            grtTemp.next = new ListNode(temp.val);
            grtTemp = grtTemp.next;
          }
          temp = temp.next;
        }
        lessTemp.next = nodeGrt.next;
         return nodeLess.next;
    } 
}
