------------Question Link-------------
https://leetcode.com/problems/largest-rectangle-in-histogram/description/

--------------Code-----------------

class Solution {
    public int largestRectangleArea(int[] heights) {
        int n = heights.length;
        int[] pse = new int[n];
        int[] nse = new int[n];
        Stack<Integer> st = new Stack<>();

        //pse
        st.push(0); //push first index
        pse[0] = -1; //pse for first index = -1

        for(int i=1; i<n; i++){
            while(!st.isEmpty() && heights[st.peek()]>=heights[i]){
                st.pop();
            }
            if (!st.isEmpty()) pse[i] = st.peek();
            else pse[i] = -1;
            st.push(i);
        }
        //for nse, empty the stack to use it or create new Stack
        while (!st.isEmpty()) st.pop();

        //nse
        st.push(n-1); //push last index
        nse[n-1] = n; //nse for last index = n

        for(int i=n-2; i>=0; i--){
            while(!st.isEmpty() && heights[st.peek()]>=heights[i]){
                st.pop();
            }
            if (!st.isEmpty()) nse[i] = st.peek();
            else nse[i] = n;
            st.push(i);
        }

        //calculate the max area
        int max = -1;

        for (int i = 0; i < n; i++) {
            int area = heights[i]*(nse[i]-pse[i]-1);
            max = Math.max(max,area);
        }
        return max;

    }
}
