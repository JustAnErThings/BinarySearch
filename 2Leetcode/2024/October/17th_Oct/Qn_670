---------------Question Link----------------
https://leetcode.com/problems/maximum-swap/description/?envType=daily-question&envId=2024-10-17

---------------Code----------------

class Solution {
    public int maximumSwap(int num) {
        char[] digits = Integer.toString(num).toCharArray();
        int n = digits.length;
        int[] maxIndex = new int[n];
        
        maxIndex[n - 1] = n - 1;
        for (int i = n - 2; i >= 0; i--) {
            maxIndex[i] = (digits[i] > digits[maxIndex[i + 1]]) ? i : maxIndex[i + 1];
        }
        
        for (int i = 0; i < n; i++) {
            if (digits[i] < digits[maxIndex[i]]) {
                char temp = digits[i];
                digits[i] = digits[maxIndex[i]];
                digits[maxIndex[i]] = temp;
                break;
            }
        }
        return Integer.parseInt(new String(digits));
    }
}
